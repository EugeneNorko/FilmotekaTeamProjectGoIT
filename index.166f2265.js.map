{"mappings":"YAAA,IAAMA,EAAM,mCCEZ,IAAMC,EAAQC,SAASC,cAAc,UDiB9B,W,IAAsBC,EAAAC,UAAAC,OAAA,YAAAD,UAAA,GAAMA,UAAA,GAAD,EAC/B,OAAOE,MAAM,2DAAuEC,OAAZR,EAAI,UAAaQ,OAALJ,IAAQK,MAAK,SAAAC,G,OAASA,EAAQC,WChBrH,GAAcF,MAAK,SAACG,GAChBC,QAAQC,IAAIF,GAKT,SAA4BG,GAC/B,IAAMC,EAAaD,EAAUE,QAAO,SAACC,EAAMC,GACvC,OAAOD,EACP,0KAMiBV,OAFgCW,EAAKC,YAAY,mEAQlCZ,OANfW,EAAKE,GAAG,sLAMkBb,OAAXW,EAAKG,MAAM,ySAS5C,IACIrB,EAAMsB,mBAAmB,YAAaP,GA5B7CQ,CADkBZ,EAAQa,Y","sources":["src/scripts/fetch.js","src/scripts/renderFilmCard.js"],"sourcesContent":["const key = \"1e3bd345eb5d29ac0f4521d096bb0e9d\";\n\n// приклад імпорту: import { findWordKey } from './scripts/fetch';\n\n//------- Пошук за ключовим словом----\n\nexport function findWordKey (word,page=1) {\n    \n  return fetch(`https://api.themoviedb.org/3/search/movie?api_key=${key}&language=en-US&page=1&include_adult=false&query=${word}&page=${page}`).then(respons=>respons.json())\n\n}\n\n//------- Пошук по ід карти----\nexport function findCardId (idCard){\n   return fetch(`https://api.themoviedb.org/3/movie/${idCard}?api_key=${key}&language=en-US`).then(respons=>respons.json())\n}\n\n//------ Популярні фільми---\n\nexport function popularFilm (page=1){\n   return fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${key}&page=${page}`).then(respons=>respons.json())\n}\n\n\n// ------- Запити  для рендеренга розмітки \n\n//  .title - назва фільма\n//  .original_title - оригінальна назва фільма \n//  .popularity - популярність\n//  .release_date - дата вихода\n//  .poster_path  -  картинка на заставку (щоб дістать картинку фільма треба спочатку вести сайт \"https://image.tmdb.org/t/p/original/cсилка на картинку\")\n//  .backdrop_path - фонова картинка\n//  .genre_ids - жанри ( тільки по ід запросу жанри можна витянуть прописом, через інші вони ідуть в цифровому значенні, обєкт значень в файлі genre.js  )\n//  .overview - опис фільма\n\n","import { popularFilm } from '././fetch.js'\n\nconst place = document.querySelector('.main');\n\npopularFilm().then((filmSet) => {\n    console.log(filmSet)\n    const filmArray = filmSet.results;\n    renderFilmCardHtml(filmArray);\n});\n\nexport function renderFilmCardHtml(filmArray) {\n    const renderHtml = filmArray.reduce((html, film) => {\n        return html +=\n        `<li class=\"gallery__item\">\n          <div class=\"movie-card\">\n            <img\n              class=\"poster\"\n              src=\"https://image.tmdb.org/t/p/original/${film.poster_path}\"\n              alt=\"poster of movie\"\n              data-id=\"${film.id}\"\n              loading=\"lazy\"\n            />\n\n            <div class=\"movie-details\">\n              <div class=\"movie-details-info\">\n                <p class=\"movie-name\">${film.title}</p>\n                <div class=\"movie-description\">\n                  <p class=\"movie-info\">Documentary, Drama, Other | 2019</p>\n                  <div class=\"movie-details-rate\">6.5</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </li>`\n    }, \"\");\n    return place.insertAdjacentHTML('beforeend', renderHtml); \n}\n\n//src=\"https://upload.wikimedia.org/wikipedia/commons/c/c2/No_image_poster.png\""],"names":["$f5773e7415a14ca6$var$key","$487540b8ab403eb6$var$place","document","querySelector","page","arguments","length","fetch","concat","then","respons","json","filmSet","console","log","filmArray","renderHtml","reduce","html","film","poster_path","id","title","insertAdjacentHTML","$487540b8ab403eb6$export$7a2ce8ffe4e62386","results"],"version":3,"file":"index.166f2265.js.map"}